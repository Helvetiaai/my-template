---
description: 
globs: 
alwaysApply: true
---
---
description: Project rule index and core development principles
alwaysApply: false
---

# ðŸ§± Primary Rule Entry Point for Project Template

This file acts as a rule index ("barrel") summarizing core coding principles and linking to rule modules.

---

## ðŸ§­ Global Engineering Principles
- **SOLID**: Write modular, maintainable, and extendable code
- **DRY**: Avoid duplication â€” abstract shared logic
- **ACID**: Ensure data integrity across services and storage
- **KISS**: Keep implementations simple and clear
- **YAGNI**: Avoid overengineering â€” implement only whatâ€™s needed
- **SSOT**: Share types and models from a single source of truth

---

## ðŸ”— Modular Rule Files

### ðŸ”¹ Frontend
ðŸ“„ `C:\Users\Ben\Projects\my-template\.cursor\rules\frontend.mdc`  
- React + Vite + Tailwind + MUI
- Full-stack alignment via OpenAPI-generated clients
- Component-level accessibility and performance optimization

### ðŸ”¹ Backend
ðŸ“„ `C:\Users\Ben\Projects\my-template\.cursor\rules\backend.mdc`  
- NestJS with strict module/controller/service structure
- Swagger-based shared typing and API contracts
- Prisma schema alignment and transactional safety

### ðŸ”¹ Structure
ðŸ“„ `C:\Users\Ben\Projects\my-template\.cursor\rules\structure.mdc`  
- Bidirectional naming alignment (DB â†’ API â†’ UI)
- Strict folder structure and naming enforcement
- Environment, import/export, and shared type rules

---

> Use this file as a top-level view of how this project enforces consistent structure, style, and quality across all layers.


